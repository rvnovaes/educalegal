# Generated by Django 3.0.4 on 2020-03-06 17:47

from django.db import migrations, models
import django.db.models.deletion


def create_system_tenant(apps, schema_editor):
    Tenant = apps.get_model("tenant", "Tenant")
    system_tenant = Tenant(name="System", subdomain_prefix="sys")
    system_tenant.save()


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('subdomain_prefix', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('use_esignature', models.BooleanField(default=True, verbose_name='Usa assinatura eletrônica')),
            ],
        ),
        migrations.CreateModel(
            name='TenantESignatureData',
            fields=[
                ('tenant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='tenant.Tenant')),
                ('provider', models.CharField(default='Docusign', max_length=255, verbose_name='Fornecedor')),
                ('private_key', models.TextField(verbose_name='Private Key')),
                ('client_id', models.CharField(help_text='AKA Integration Key', max_length=255, verbose_name='Client ID')),
                ('impersonated_user_guid', models.CharField(blank=True, help_text='AKA API Username', max_length=255, verbose_name='Impersonated User')),
                ('test_mode', models.BooleanField(default=True, verbose_name='Test Mode')),
            ],
        ),
        migrations.CreateModel(
            name='TenantGedData',
            fields=[
                ('tenant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='tenant.Tenant')),
                ('url', models.CharField(max_length=512, verbose_name='URL')),
                ('token', models.CharField(max_length=255, verbose_name='Token da API')),
                ('database', models.CharField(max_length=255, verbose_name='Banco de Dados')),
                ('database_user', models.CharField(max_length=255, verbose_name='Usuário do Banco de Dados')),
                ('database_user_password', models.CharField(max_length=255, verbose_name='Senha do Usuário do Banco de Dados')),
                ('database_host', models.CharField(max_length=255, verbose_name='Host do Banco de Dados')),
                ('database_port', models.CharField(max_length=255, verbose_name='Porta do Banco de Dados')),
                ('database_database_engine', models.CharField(default='django.db.backends.postgresql', max_length=255, verbose_name='Sistema de Banco de Dados')),
                ('storage_provider', models.CharField(max_length=255, verbose_name='Fornecedor de Armazenamento')),
                ('storage_access_key', models.CharField(max_length=255, verbose_name='Access Key Token')),
                ('storage_secret_key', models.CharField(max_length=255, verbose_name='Secret Key')),
                ('storage_bucket_name', models.CharField(max_length=255, verbose_name='Nome do Bucket')),
                ('storage_default_acl', models.CharField(default='private', max_length=255, verbose_name='ACL padrão')),
                ('storage_endpoint_url', models.CharField(max_length=255, verbose_name='URL do Endpoint')),
                ('storage_region_name', models.CharField(max_length=255, verbose_name='Região')),
            ],
        ),
        migrations.RunPython(create_system_tenant),
    ]
