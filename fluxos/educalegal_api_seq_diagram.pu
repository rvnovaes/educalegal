@startuml
header Integration - EducaLegal + Docassemble + Mayan + Docusign
actor User
autonumber

User -> EducaLegal: Clicks Interview
activate EducaLegal

EducaLegal -> Docassemble: Interview Link (url params: tid, ut, intid, doc_uuid)
activate Docassemble

note right
element-tenant-school-interview.yml +
element-tenant-school-interview-error-screens.yml +
module_educalegal_client.py
end note

Docassemble -> EducaLegal: GET tenants_school_names_school_data(tid)
EducaLegal -> Docassemble: school_data_dict{id, name, legal_name, email, school_units, address fields, etc}

Docassemble -> EducaLegal: GET plans_read(plan_id)
EducaLegal -> Docassemble: plan_data{id, name, value, use_ged, plan_type, document_limit, use_esignature, value_currency, use_bulk_interview}

Docassemble -> EducaLegal : GET tenants_read(tid)
EducaLegal -> Docassemble: tenant_data{id, name, auto_enrolled, eua_agreement, etc + esignature_app{name, client_id, provider, private_key, impersonated_user_guid}}

Docassemble -> EducaLegal: GET tenants_ged_read(tid)
EducaLegal -> Docassemble: tenant_ged_data(url, token)
deactivate EducaLegal

Docassemble -> Mayan: GET document_type_read(interview_document_type)
activate Mayan

note left
element-tenant-school-interview.yml +
element_mayan_client.py
end note

Mayan -> Docassemble: document_type_data{id, url, label}
deactivate Mayan

Docassemble -> EducaLegal: GET interviews_read(intid)
activate EducaLegal


EducaLegal -> Docassemble: interview_data(name, description, version, date, lang, doc type)
deactivate EducaLegal

Docassemble -> User: Shows interview form
deactivate Docassemble

User -> Docassemble: Fills up the interview
activate Docassemble

Docassemble -> EducaLegal: POST elc.patch_document(data, params)
activate EducaLegal


note right
element-educalegal-patch-document.yml +
module_educalegal_client.py
end note

EducaLegal -> Docassemble: returns Educa Legal document data
deactivate EducaLegal

Docassemble -> Mayan: POST mc.document_create(file, doc_type, file_name, lang, desc)
activate Mayan

note right
Only if tenant_use_ged == True
element-ged.yml + 
element_mayan_client.py +
module_educalegal_client.py
end note

Mayan -> Docassemble: response(many fields, specially document id)
Docassemble -> Mayan: GET mc.document_read(created_document_id)
Mayan -> Docassemble: created_document_data(status, id, url, uuid)
deactivate Mayan
Docassemble -> EducaLegal: PATCH elc.patch_document_with_ged_data(el_document_created_id, cd_ged_id, cd_ged_link, cd_ged_uuid, cd_status)
deactivate Docassemble
User -> Docassemble: Clicks Button to ESignature
activate Docassemble

Docassemble -> Docusign: POST send_to_docusign((recipients, documents, send_immediately, email_subject)
activate Docusign

note left
                element-esignature.yml
element_docusign.py
end note


Docusign -> Docassemble: envelope_data
Docassemble -> EducaLegal: PATCH patch_document(data, params)
deactivate Docassemble
activate EducaLegal

Docusign -> Recipients: Send emails
activate Recipients
Recipients -> Docusign: Send Signatures
Docusign/ClickSign -> EducaLegal: POST webhook_listener(statuses changes)
Recipients -> Docusign: Send Signatures
deactivate Recipients

Docusign/ClickSign -> EducaLegal: POST webhook_listener(final status + signed document + certificate)
deactivate Docusign

EducaLegal -> Mayan: POST mc.document_create(file, doc_type, file_name, lang, desc)
deactivate EducaLegal
@enduml