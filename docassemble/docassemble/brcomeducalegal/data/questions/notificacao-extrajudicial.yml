metadata:
  title: Notificação extrajudicial
---
include:
  - element-tenant-school-interview.yml
  - element-features.yml
  - element-roadmap.yml
  - element-foro.yml
  - element-data-list.yml
  - element-generate-file.yml
  - element-signature.yml
  - element-educalegal-patch-document.yml
  - element-ged.yml
  - element-document-ready.yml
---
modules:
  - docassemble_wrappers.validator_collection_br
---
sections:
  - Notificado
  - Objeto da cobrança
  - Dados do Notificante
  - Assinatura
  - Conclusão
---
code:  |
  content_document = "notificacao-extrajudicial.docx"
---
id: logic
mandatory: True
code: |

  if valid_data:
    menu_items
    if len(school_names_list) > 1:
      selected_school
    else:
      selected_school = school_names_list[0]
    school
    notifieds.target_number = 1
    for item in notifieds:
      item.name.text
    valid_notifieds_table
    student_name
    financeiro_email
    signature_local
    generated_file
    el_document_patched_with_docassemble_data
    if plan_use_ged:
      el_document_patched_with_ged_data
    document_ready_screen
  all_done
---
objects:
  - notifieds: DAList.using(object_type=Individual, complete_attribute='complete', ask_number=True)
---
code: |
  notifieds[i].name.text
  notifieds[i].address.street_name
  notifieds[i].complete = True
---
ga id: |
  code: ga_id_begin
section: Notificado
progress: 25
question: |
  Dados do(a) notificado
fields:
  - "Nome completo:": notifieds[i].name.text
    required: True
  - "CPF:": notifieds[i].cpf
    required: True
    validate: validate_cpf
  - "Número do RG:": notifieds[i].rg
    required: True
  - "Nacionalidade:": notifieds[i].nationality
    required: True
    default: brasileiro(a)
  - "Estado civil:": notifieds[i].marital_status
    required: True
    datatype: radio
    choices:
      - solteiro(a)
      - casado(a)
      - divorciado(a)
      - viúvo(a)
  - "Profissão:": notifieds[i].occupation
    required: False
  - "E-mail:": notifieds[i].email
    help: ${ help_email_msg }
    datatype: email
    required: False
script: |
  <script type="text/javascript">
    $(document).ready(function(){
        $('#bm90aWZpZWRzW2ldLmNwZg').mask('000.000.000-00', {reverse: true});
    });
  </script>
---
section: Notificado
progress: 35
question: |
  Endereço do(a) ${ notifieds[i].name.text }
fields:
  - "CEP:": notifieds[i].address.zip
    required: True
  - "Logradouro:": notifieds[i].address.street_name
    required: True
  - "Número:": notifieds[i].address.street_number
    required: True
  - "Complemento:": notifieds[i].address.unit
    required: False
  - "Bairro:": notifieds[i].address.neighborhood
    required: True
  - "Cidade:": notifieds[i].address.city
    required: True
  - "Estado:": notifieds[i].address.state
    required: True
    code: state_initials_list
script: |
  <script type="text/javascript">
  $(document).ready(function(){
    $('#bm90aWZpZWRzW2ldLmFkZHJlc3Muemlw').mask('00000-000');
  });

  $("#bm90aWZpZWRzW2ldLmFkZHJlc3Muemlw").focusout(function(){
    var cep = $("#bm90aWZpZWRzW2ldLmFkZHJlc3Muemlw").val();
    cep = cep.replace ("-","");
    if (cep != ""){
      var urlStr = "https://viacep.com.br/ws/"+ cep +"/json/";
      $.ajax({
        url: urlStr,
        crossDomain: true,
        type: "get",
        dataType: "json",
        success: function(data){
          $("#bm90aWZpZWRzW2ldLmFkZHJlc3Muc3RyZWV0X25hbWU").val(data.logradouro);
          $("#bm90aWZpZWRzW2ldLmFkZHJlc3MubmVpZ2hib3Job29k").val(data.bairro);
          $("#bm90aWZpZWRzW2ldLmFkZHJlc3MuY2l0eQ").val(data.localidade);
          $("#bm90aWZpZWRzW2ldLmFkZHJlc3Muc3RhdGU").val(data.uf);
        },
        error: function(erro){
          console.log(erro);
        }
      });
    }
  });
  </script>
---
section: Notificado
progress: 50
field: valid_notifieds_table
question: |
  Notificado:
subquestion: |
  Confira o e-mail do destinatário abaixo, pois este será usado
  no envio da assinatura eletrônica ou do e-mail.
  ${ notifieds.table }
buttons:
  Continuar: continue
---
table: notifieds.table
rows: notifieds
columns:
  - Name: |
      row_item.name.text
  - E-mail: |
      row_item.email
edit:
  - email
---
section: Objeto da cobrança
progress: 60
question: |
  Dados do contrato do aluno e valor do débito
fields:
  - Nome do aluno: student_name
  - Ano letivo: school_year
    help: 'Ano letivo no qual teve origem o débito'
    datatype: integer
  - Valor do débito: debt_value
    datatype: currency
    hint: 0000,00
script: |
  <script type="text/javascript">
    $(document).ready(function(){
        $('#ZGVidF92YWx1ZQ').mask('###0.00', {reverse: true});
      });
  </script>
---
code: |
  from num2words import num2words
  extended_debt_value = num2words(debt_value, lang='pt_BR', to='currency')
---
section: Dados do Financeiro
progress: 70
question: Dados do financeiro
fields:
  - 'E-mail do financeiro:': financeiro_email
    help: "O e-mail informado será utilizado para contato com o setor financeiro da escola."
    datatype: email
    required: False
---
code: |
  recipients = list()
  notificante_recipient = dict()
  notificante_recipient['name'] = school_legal_name
  notificante_recipient['email'] = school_email
  notificante_recipient['group'] = 'signers'
  notificante_recipient['routingOrder'] = 1
  notificante_recipient['tabs'] = [
      {
          'type': 'signHere',
          'anchorString': generate_anchor('signHere', school_email)
      },
  ]
  recipients.append(notificante_recipient)

  for item in notifieds:
    if item.email:
      notified_recipient = dict()
      notified_recipient['name'] = item.name.text
      notified_recipient['email'] = item.email
      notified_recipient['group'] = 'certifiedDeliveries'
      notified_recipient['routingOrder'] = 2
      recipients.append(notified_recipient)

  financeiro_recipient = dict()
  financeiro_recipient['name'] = "Contato Financeiro"
  financeiro_recipient['email'] = financeiro_email
  financeiro_recipient['group'] = 'carbonCopies'
  financeiro_recipient['routingOrder'] = 3
  recipients.append(financeiro_recipient)

  document_name = custom_file_name + '.pdf'

  documents = [
      {
          'name': document_name,
          'fileExtension': 'pdf',
          'documentBase64': make_document_base64(generated_file.pdf.path())
      }
  ]
---
code: |
  if plan_use_esignature:
    help_email_msg = "O e-mail informado será utilizado no envio do documento para assinatura eletrônica."
  else:
    help_email_msg = "Digite um e-mail válido."
---
code: |
  email_subject = "IMPORTANTE: " + school_name + " | " + interview_label
  email_category = interview_custom_file_name_string
  email_html_content = "<h1>" + interview_label + "</h1><p>Leia, com atenção o documento em anexo.</p>"