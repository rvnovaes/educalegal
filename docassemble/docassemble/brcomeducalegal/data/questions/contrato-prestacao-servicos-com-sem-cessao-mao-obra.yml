metadata:
  title: Contrato de Prestação de Serviços Com/Sem Cessão de Mão de Obra
---
include:
  - element-tenant-school-interview.yml
  - element-features.yml
  - element-roadmap.yml
  - element-foro.yml
  - element-data-list.yml
  - element-signature.yml
  - element-generate-file.yml
  - element-educalegal-patch-document.yml
  - element-ged.yml
  - element-document-ready.yml
  - element-school-email-reviewed.yml
  - element-default-messages.yml
---
modules:
  - docassemble_wrappers.validator_collection_br
---
sections:
  - Contratante
  - Contratada
  - Cláusulas
  - Assinatura
  - Conclusão
---
code:  |
  content_document = "contrato-prestacao-servicos-com-sem-cessao-mao-obra.docx"
---
id: logic
mandatory: True
code: |
  if valid_data:
    menu_items
    if len(school_names_list) > 1:
      selected_school
    else:
      selected_school = school_names_list[0]
    school
    reviewed_school_email_answer
    contratante_inserirDadosGestor
    contratadas.gather()
    if plan_use_esignature:
      valid_contratadas_table
    contratada_inserirDadosGestor
    objeto
    tipoParcela
    prazoInicio
    temExclusividade
    if temOutraObrigacao:
      for item in obrigacao:
        item.name.text
    localExecucaoServicos
    state
    signature_local
    generated_file
    el_document_patched_with_docassemble_data
    if plan_use_ged:
      el_document_patched_with_ged_data
    document_ready_screen
  all_done
---
ga id: |
  code: ga_id_begin
section: Contratante
progress: 10
question: Gestor do Contrato da Escola
fields:
  - 'Inserir os dados de contato do gestor do contrato?': contratante_inserirDadosGestor
    datatype: yesnoradio
  - 'Nome:': contratante_nome_gestor
    datatype: text
    show if:
      variable: contratante_inserirDadosGestor
      is: true
  - 'E-mail:': contratante_email_gestor
    datatype: email
    show if:
      variable: contratante_inserirDadosGestor
      is: true
    required: False
  - 'Telefone:': contratante_telefone_gestor
    datatype: text
    show if:
      variable: contratante_inserirDadosGestor
      is: true
    required: False
---
objects:
  - contratadas: DAList.using(object_type=Individual, complete_attribute='complete', ask_number=True)
---
code: |
  contratadas[i].name.first
  contratadas[i].address.street_name
  contratadas[i].complete = True
comment: |
  1. A ordem informada nesse bloco é a ordem que aparece na entrevista
  2. O complete = True deve ser a última instrução sempre
---
section: Contratada
progress: 30
question: Número de contratadas
fields:
  - Número: contratadas.target_number
    datatype: integer
    default: 1
    min: 1
---
section: Contratada
progress: 35
question: Dados do(a) ${word(ordinal(i)) } contratada
fields:
  - Tipo de pessoa: contratadas[i].tipo_pessoa
    input type: radio
    choices:
      - Física
      - Jurídica
  - 'Nome/Razão social:': contratadas[i].name.first
    validate: validate_person_full_name
    help: 'Para pessoa jurídica informe o nome conforme consta no CNPJ. Para pessoa física, o nome completo.'
    js show if: |
      val("contratadas[i].tipo_pessoa")
  - 'CNPJ:': contratadas[i].cnpj
    validate: validate_cnpj
    show if:
      variable: contratadas[i].tipo_pessoa
      is: Jurídica
  - 'CPF:': contratadas[i].cpf
    validate: validate_cpf
    show if:
      variable: contratadas[i].tipo_pessoa
      is: Física
  - 'RG:': contratadas[i].rg
    datatype: text
    show if:
      variable: contratadas[i].tipo_pessoa
      is: Física
  - 'Nacionalidade:': contratadas[i].nacionalidade
    datatype: text
    default: brasileiro(a)
    show if:
      variable: contratadas[i].tipo_pessoa
      is: Física
  - 'Estado civil:': contratadas[i].estado_civil
    input type: radio
    choices:
      - solteiro(a)
      - casado(a)
      - divorciado(a)
      - viúvo(a)
    show if:
      variable: contratadas[i].tipo_pessoa
      is: Física
  - 'Profissão:': contratadas[i].profissao
    datatype: text
    required: False
    show if:
      variable: contratadas[i].tipo_pessoa
      is: Física
  - "E-mail:": contratadas[i].email
    help: ${ help_email_msg }
    required: false
    datatype: email
    js show if: |
      val("contratadas[i].tipo_pessoa") == "Física" || val("contratadas[i].tipo_pessoa") == "Jurídica"
script: |
  <script type='text/javascript'>
    $(document).ready(function(){
        $('#X2ZpZWxkXzI').mask('00.000.000/0000-00', {reverse: true});
        $('#X2ZpZWxkXzM').mask('000.000.000-00', {reverse: true});
      });
  </script>
---
section: Contratada
progress: 40
question: Endereço do(a) ${ contratadas[i].name.first }
fields:
  - 'CEP:': contratadas[i].address.zip
    datatype: text
  - 'Logradouro:': contratadas[i].address.street_name
    datatype: text
  - 'Número:': contratadas[i].address.street_number
    datatype: text
  - 'Complemento:': contratadas[i].address.unit
    datatype: text
    required: false
  - 'Bairro:': contratadas[i].address.neighborhood
    datatype: text
  - 'Município:': contratadas[i].address.city
    datatype: text
  - 'Estado:': contratadas[i].address.state
    code: state_initials_list
    datatype: dropdown
script: |
  <script type="text/javascript">
  $(document).ready(function(){
    $('#Y29udHJhdGFkYXNbaV0uYWRkcmVzcy56aXA').mask('00000-000');
  });

  $("#Y29udHJhdGFkYXNbaV0uYWRkcmVzcy56aXA").focusout(function(){
    var cep = $("#Y29udHJhdGFkYXNbaV0uYWRkcmVzcy56aXA").val();
    cep = cep.replace ("-","");
    if (cep != ""){
      var urlStr = "https://viacep.com.br/ws/"+ cep +"/json/";
      $.ajax({
        url: urlStr,
        crossDomain: true,
        type: "get",
        dataType: "json",
        success: function(data){
          $("#Y29udHJhdGFkYXNbaV0uYWRkcmVzcy5zdHJlZXRfbmFtZQ").val(data.logradouro);
          $("#Y29udHJhdGFkYXNbaV0uYWRkcmVzcy5uZWlnaGJvcmhvb2Q").val(data.bairro);
          $("#Y29udHJhdGFkYXNbaV0uYWRkcmVzcy5jaXR5").val(data.localidade);
          $("#Y29udHJhdGFkYXNbaV0uYWRkcmVzcy5zdGF0ZQ").val(data.uf);
        },
        error: function(erro){
          console.log(erro);
        }
      });
    }
  });
  </script>
---
section: Contratada
field: valid_contratadas_table
question: |
  Contratadas:
subquestion: |
  Confira os e-mails dos destinatários abaixo, pois estes serão usados
  no envio para a assinatura eletrônica.
  ${ contratadas.table }
buttons:
  Continuar: continue
---
table: contratadas.table
rows: contratadas
columns:
  - Name: |
      row_item.name.first
  - E-mail: |
      row_item.email
edit:
  - email
---
section: Contratada
progress: 50
question: Gestor do Contrato
fields:
  - 'Inserir os dados de contato do gestor do contrato?': contratada_inserirDadosGestor
    datatype: yesnoradio
  - 'Nome:': contratada_nome_gestor
    datatype: text
    show if:
      variable: contratada_inserirDadosGestor
      is: true
  - 'E-mail:': contratada_email_gestor
    datatype: email
    show if:
      variable: contratada_inserirDadosGestor
      is: true
    required: False
  - 'Telefone:': contratada_telefone_gestor
    datatype: text
    show if:
      variable: contratada_inserirDadosGestor
      is: true
    required: False
---
section: Cláusulas
progress: 55
question: |
  Objeto
subquestion: |
  O presente Contrato tem como objeto a prestação de serviços de [FIELD objeto].
fields:
  - 'Objeto:': objeto
    datatype: text
    inline width: 30em
  - 'A contratada será responsável por fornecer os equipamentos necessários à prestação do serviço?': contratadaForneceEquipamentos
    datatype: yesnoradio
  - 'Existe Anexo com especificações e/ou proposta comercial?': has_attachment
    datatype: yesnoradio
  - 'Inserir Anexo(s) :': attachments
    datatype: files
    show if:
      variable: has_attachment
      is: true
    required: True
    help: "Formatos válidos: PDF, JPEG e PNG"
    accept: |
      "image/jpeg, image/png, application/pdf"
---
code: |
  from num2words import num2words
  valorContratoExtenso = num2words(valorContrato, lang='pt_BR', to='currency')

  if tipoParcela != 'mensal' and formaPagamento == 'parcelado':
    nrParcelasExtenso = num2words(nrParcelas, lang='pt_BR')
---
section: Cláusulas
progress: 60
question: Preço e forma de pagamento
subquestion: |
  A Contratante pagará à Contratada o valor [FIELD tipoParcela] de [FIELD valorContrato].
fields:
  - 'A Contratante pagará à Contratada o valor:': tipoParcela
    datatype: dropdown
    choices:
    - mensal: mensal
    - anual: anual
    - total: total
  - 'Valor:': valorContrato
    datatype: currency
    hint: 0000,00
  - Forma de pagamento: formaPagamento
    datatype: radio
    choices:
      - À vista: a_vista
      - Parcelado: parcelado
    hide if:
      variable: tipoParcela
      is: mensal
  - 'Nº de parcelas:': nrParcelas
    datatype: integer
    show if:
      variable: formaPagamento
      is: parcelado
  - 'O pagamento do Preço será realizado mediante:': tipoPagamento
    choices:
      - Conta corrente: conta corrente
      - Boleto bancário: boleto bancário
    datatype: radio
  - 'Banco:': banco
    datatype: text
    help: 'Ex.: Bradesco'
    show if:
      is: conta corrente
      variable: tipoPagamento
  - 'Agência:': agencia
    datatype: text
    show if:
      is: conta corrente
      variable: tipoPagamento
  - 'Conta corrente:': contaCorrente
    datatype: text
    show if:
      is: conta corrente
      variable: tipoPagamento
  - Tipo de pessoa: tipo_pessoa_cc
    input type: radio
    choices:
      - Física
      - Jurídica
    show if:
      is: conta corrente
      variable: tipoPagamento
  - 'CNPJ:': cnpj_cc
    validate: validate_cnpj
    show if:
      variable: tipo_pessoa_cc
      is: Jurídica
  - 'CPF:': cpf_cc
    validate: validate_cpf
    show if:
      variable: tipo_pessoa_cc
      is: Física
  - 'O Contrato é reajustado anualmente?': reajusteAnual
    datatype: yesnoradio 
  - Tipo de reajuste: tipoReajuste
    datatype: radio
    choices: 
    - IGP-M: IGP-M
    - IPC-A: IPC-A
    show if:
      is: true
      variable: reajusteAnual
  - 'Quem arcará com as despesas de locomoção, estadia e alimentação?': pgtoDespesasExtras
    input type: radio
    choices:
      - Contratante
      - Contratada
script: |
  <script type='text/javascript'>
    $(document).ready(function(){
        $('#X2ZpZWxkXzk').mask('00.000.000/0000-00', {reverse: true});
        $('#X2ZpZWxkXzEw').mask('000.000.000-00', {reverse: true});
        $('#dmFsb3JDb250cmF0bw').mask('000000000000000.00', {reverse: true});
    });
  </script>
---
section: Cláusulas
progress: 65
question: Prazo
subquestion: |
  O presente Contrato irá vigorar de [FIELD prazoInicio] até [FIELD prazoFim].
fields:
  - 'Data do início do Contrato': prazoInicio
    datatype: date
  - 'Data do fim do Contrato': prazoFim
    datatype: date
---
section: Cláusulas
progress: 70
question: 'O presente Contrato prevê exclusividade por parte da Contratada no que se refere ao segmento de atuação da Contratante?'
yesno: temExclusividade
---
section: Cláusulas
progress: 75
question: 'Existem outras obrigações da Contratada além das previstas no Contrato?'
yesno: temOutraObrigacao
---
objects:
  obrigacao: DAList.using(object_type=Thing, there_are_any=True)
---
progress: 80
question: |
  Cite as outras obrigações da Contratada.
fields:
  - 'Obrigação:': obrigacao[i].name.text
    help: 'Ex.: apresentação de relatórios com determinada frequência'
    required: False
list collect: True
section: Cláusulas
---
table: obrigacao.table
rows: obrigacao
columns:
  - 'Obrigação:': row_item.name
edit:
  - name.text
---
section: Cláusulas
progress: 90
question: Local da prestação dos serviços
fields:
  - 'A execução dos Serviços ocorrerá nas dependências da': localExecucaoServicos
    datatype: radio
    choices:
      - Contratante
      - Contratada
  - 'Logradouro:': logradouroExecucaoServicos
    datatype: text
    help: "Ex.: R. Tupis, 100 | Av. Afonso Pena, 521"
    show if:
      variable: localExecucaoServicos
      is: Contratante
  - 'Hora início:': horaInicioExecucaoServicos
    datatype: time
    show if:
      variable: localExecucaoServicos
      is: Contratante
  - 'Hora fim:': horaFimExecucaoServicos
    datatype: time
    show if:
      variable: localExecucaoServicos
      is: Contratante
  - 'Em dias': diasTrabalho
    datatype: checkboxes
    choices:
      - comerciais
      - finais de semana
      - feriados
    none of the above: False
    show if:
      variable: localExecucaoServicos
      is: Contratante
---
code: |
  if localExecucaoServicos == 'Contratante':
    horaInicioExecucaoServicos = format_time(horaInicioExecucaoServicos, format='HH:mm')
    horaFimExecucaoServicos = format_time(horaFimExecucaoServicos, format='HH:mm')
---
code: |
  recipients = list()
  for item in contratadas:
      if item.email:
          new_recipient = dict()
          new_recipient['name'] = item.name.first
          new_recipient['email'] = item.email
          new_recipient['group'] = 'signers'
          new_recipient['routingOrder'] = 1
          new_recipient['tabs'] = [
              {
                  'type': 'signHere',
                  'anchorString': generate_anchor('signHere', item.email)
              },
          ]
          recipients.append(new_recipient)

  new_recipient = dict()
  new_recipient['name'] = school_legal_name
  new_recipient['email'] = school_email
  new_recipient['group'] = 'signers'
  new_recipient['routingOrder'] = 2
  new_recipient['tabs'] = [
      {
          'type': 'signHere',
          'anchorString': generate_anchor('signHere', school_email)
      },
  ]
  recipients.append(new_recipient)

  document_name = custom_file_name + '.pdf'

  documents = [
      {
          'name': document_name,
          'fileExtension': 'pdf',
          'documentBase64': make_document_base64(generated_file.pdf.path())
      }
  ]
