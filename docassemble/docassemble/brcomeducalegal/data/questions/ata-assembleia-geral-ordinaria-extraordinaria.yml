metadata:
  title: Ata da Assembleia Geral Ordinária-Extraordinária
---
include:
  - element-tenant-school-interview.yml
  - element-features.yml
  - element-roadmap.yml
  - element-data-list.yml
  - element-signature.yml
  - element-generate-file.yml
  - element-educalegal-patch-document.yml
  - element-document-ready.yml
  - element-school-email-reviewed.yml
  - element-default-messages.yml
  - element-school-witness.yml
---
modules:
  - docassemble_wrappers.validator_collection_br
  - .module_docusign_client
---
sections:
  - Companhia
  - Assembleia
  - Exercício Social
  - Agenda
  - Acionistas Presentes
---
code:  |
  content_document = "ata-assembleia-geral-ordinaria-extraordinaria.docx"
---
id: logic
mandatory: True
code: |
  if valid_data:
    menu_items
    if len(school_names_list) > 1:
      selected_school
    else:
      selected_school = school_names_list[0]
    school
    ata_type
    stock_company.target_number = 1
    for item in stock_company:
      item.name.text
    if has_managements:
      for item in managements:
        item.name.first
    general_shareholder_meeting_date
    chairman_name
    accounting_year
    if ata_type == "Assembleia Geral Ordinária":
      net_profit
    if ata_type == "Assembleia Geral Extraordinária":
      for item in agenda:
        item.name.text
      for item in adoptions:
        item.name.text
    for item in shareholders:
      if item.type  == 'individual':
        item.name.text
        item.child.target_number = 0
      elif item.type == 'organization':
        item.name.text
    witnesses.uses_parts = False
    valid_witnesses_table
    signature_local
    generated_file
    el_patch_document
    document_ready_screen
---
section: Companhia
progress: 5
question: Tipo da assembleia geral
fields:
  - "Tipo:": ata_type
    datatype: radio
    choices:
      - Ordinária: Assembleia Geral Ordinária
      - Extraordinária: Assembleia Geral Extraordinária
---
objects:
  - stock_company: DAList.using(object_type=Organization, complete_attribute='complete', ask_number=True)
---
code: |
  stock_company[i].name.text
  stock_company[i].address.street_name
  stock_company[i].complete = True
comment: |
  1. A ordem informada nesse bloco é a ordem que aparece na entrevista
  2. O complete = True deve ser a última instrução sempre
---
section: Companhia
progress: 5
question: Número de Companhias
fields:
  - Número: stock_company.target_number
    datatype: integer
    default: 1
    min: 1
---
ga id: |
  code: ga_id_begin
progress: 5
section: Companhia
question: Dados da Companhia
fields:
  - 'Razão Social: ': stock_company[i].name.text
    datatype: text
  - 'CNPJ:': stock_company[i].cnpj
    datatype: text
    required: True
    validate: validate_cnpj
  - 'Nire: ': stock_company[i].nire
    datatype: text
    required: True
    help: "A sigla NIRE significa Número de Identificação do Registro de Empresas. É ele quem comprova que a empresa existe oficialmente."
script: |
  <script type="text/javascript">
    $(document).ready(function(){
        $('#c3RvY2tfY29tcGFueVtpXS5jbnBq').mask('00.000.000/0000-00', {reverse: true});
      });
  </script>
---
progress: 5
section: Companhia
question: Endereço da ${ stock_company[i].name.text }
fields:
  - 'CEP: ': stock_company[i].address.zip
    datatype: text
  - 'Logradouro: ': stock_company[i].address.street_name
    datatype: text
    address autocomplete: True
  - 'Número: ': stock_company[i].address.street_number
    datatype: text
  - 'Complemento: ': stock_company[i].address.unit
    datatype: text
    required: False
  - 'Bairro: ': stock_company[i].address.neighborhood
    datatype: text
  - 'Município: ': stock_company[i].address.city
    datatype: text
  - 'Estado: ': stock_company[i].address.state
    code: state_initials_list
script: |
  <script type="text/javascript">
  $(document).ready(function(){
    $('#c3RvY2tfY29tcGFueVtpXS5hZGRyZXNzLnppcA').mask('00000-000');
  });

  $("#c3RvY2tfY29tcGFueVtpXS5hZGRyZXNzLnppcA").focusout(function(){
    var cep = $("#c3RvY2tfY29tcGFueVtpXS5hZGRyZXNzLnppcA").val();
    cep = cep.replace ("-","");
    if (cep != ""){
      var urlStr = "https://viacep.com.br/ws/"+ cep +"/json/";
      $.ajax({
        url: urlStr,
        crossDomain: true,
        type: "get",
        dataType: "json",
        success: function(data){
          $("#c3RvY2tfY29tcGFueVtpXS5hZGRyZXNzLnN0cmVldF9uYW1l").val(data.logradouro);
          $("#c3RvY2tfY29tcGFueVtpXS5hZGRyZXNzLm5laWdoYm9yaG9vZA").val(data.bairro);
          $("#c3RvY2tfY29tcGFueVtpXS5hZGRyZXNzLmNpdHk").val(data.localidade);
          $("#c3RvY2tfY29tcGFueVtpXS5hZGRyZXNzLnN0YXRl").val(data.uf);
        },
        error: function(erro){
          console.log(erro);
        }
      });
    }
  });
  </script>
---
section: Companhia
progress: 15
question: Os integrantes da direção estão presentes?
yesno: has_managements
---
objects:
  - managements: DAList.using(object_type=Individual, there_are_any=True)
---
progress: 20
section: Companhia
question: |
  Integrantes da administração da companhia presentes na assembleia
fields:
  - "Nome completo:": managements[i].name.first
    required: True
  - "Cargo:": managements[i].position
    required: True
list collect: True
---
section: Assembleia
progress: 15
question: Data e Horário da Assembleia
fields:
  - Data: general_shareholder_meeting_date
    datatype: date
    required: True
  - "Horário:": general_shareholder_meeting_hours
    datatype: time
    required: True
---
section: Assembleia
progress: 15
question: Integrantes da mesa da Assembleia
fields:
  - "Nome completo do presidente: ": chairman_name
    validate: validate_person_full_name
    required: True
  - "E-mail do presidente: ": chairman_email
    help: ${ help_email_msg }
    datatype: email
  - "Nome completo do secretário: ": secretary_name
    validate: validate_person_full_name
    required: True
  - "E-mail do secretário: ": secretary_email
    help: ${ help_email_msg }
    datatype: email
---
section: Assembleia
progress: 15
question: Exercício Social
subquestion: |
  As demonstrações financeiras apresentadas pela Companhia são relativas ao exercício social encerrado em [FIELD accounting_year] (ano).
fields:
  - Ano: accounting_year
    datatype: integer
    inline width: 10em
    required: True
---
code: |
  from num2words import num2words
  net_profit_words = num2words(net_profit, lang='pt_BR', to='currency')
  legal_reserve_words = num2words(legal_reserve, lang='pt_BR', to='currency')
  dividend_distribution_words = num2words(dividend_distribution, lang='pt_BR', to='currency')
---
section: Assembleia
progress: 15
question: Financeiro
fields:
  - Lucro Líquido: net_profit
    datatype: currency
    required: True
  - Reserva Legal: legal_reserve
    datatype: currency
    required: True
  - Distribuição dos Dividendos: dividend_distribution
    datatype: currency
    required: True
script: |
  <script type='text/javascript'>
    $(document).ready(function(){
        $('#bmV0X3Byb2ZpdA').mask('000000000000000.00', {reverse: true});
        $('#bGVnYWxfcmVzZXJ2ZQ').mask('000000000000000.00', {reverse: true});
        $('#ZGl2aWRlbmRfZGlzdHJpYnV0aW9u').mask('000000000000000.00', {reverse: true});
    });
  </script>
---
objects:
  - agenda: DAList.using(object_type=Thing, there_are_any=True)
---
progress: 25
section: Agenda
question: Ordem do dia
subquestion: |
  Esta assembleia terá como agenda:
fields:
  - "Ordem:": agenda[i].name.text
    input type: area
    rows: 10
    required: True
list collect: True
---
objects:
  - adoptions: DAList.using(object_type=Thing, there_are_any=True)
---
progress: 30
section: Deliberações
question: Deliberações
subquestion: |
  Os acionistas decidiram, por unanimidade, sem quaisquer reservas ou ressalvas:
fields:
  - "Ordem:": adoptions[i].name.text
    required: True
    default: "APROVAR, "
    input type: area
    rows: 10
list collect: True
---
objects:
  - shareholders: |
      DAList.using(
        object_type=Person,
        ask_number=True,
        complete_attribute='complete')
  - shareholders[i].child: |
      DAList.using(
        object_type=Individual,
        ask_number=True)
---
code: |
  shareholders[i].type
  shareholders[i].name.text
  if shareholders[i].type == 'organization':
    shareholders[i].child.gather()
  shareholders[i].complete = True
---
section: Acionistas
question: |
  Número de acionistas presentes na assembleia
fields:
  - Número: shareholders.target_number
    datatype: integer
    default: 1
    min: 1
---
section: Acionistas
question: |
  Tipo do ${ word(ordinal(i)) } acionista
fields:
  - "Tipo:": shareholders[i].type
    required: True
    datatype: radio
    choices:
      - Pessoa Física: individual
      - Pessoa Jurídica: organization
---
question: |
  Dados do(a) ${ word(ordinal(i)) } acionista
fields:
  - Nome Completo: shareholders[i].name.text
    show if:
      code: |
        shareholders[i].type == "individual"
  - Razão Social: shareholders[i].name.text
    show if:
      code: |
        shareholders[i].type == "organization"
  - "Número de representantes:": shareholders[i].child.target_number
    required: False
    datatype: integer
    default: 1
    min: 1
    show if:
      code: |
        shareholders[i].type == "organization"
---
section: Acionistas
question: |
  Dados do ${ word(ordinal(j)) } representante do(a) ${ shareholders[i] }:
fields:
  - "Nome completo:": shareholders[i].child[j].name.first
    required: False
---
code: |
  recipients = list()

  if chairman_email:
      new_recipient = dict()
      new_recipient['name'] = chairman_name
      new_recipient['email'] = chairman_email
      new_recipient['group'] = 'signers'
      new_recipient['routingOrder'] = 1
      new_recipient['tabs'] = [
          {
              'type': 'signHere',
              'anchorString': generate_anchor('signHere', chairman_email)
          },
      ]
      recipients.append(new_recipient)

  if secretary_email:
      new_recipient = dict()
      new_recipient['name'] = secretary_name
      new_recipient['email'] = secretary_email
      new_recipient['group'] = 'signers'
      new_recipient['routingOrder'] = 1
      new_recipient['tabs'] = [
          {
              'type': 'signHere',
              'anchorString': generate_anchor('signHere', secretary_email)
          },
      ]
      recipients.append(new_recipient)

  for item in witnesses:
      if item.email:
          new_recipient = dict()
          new_recipient['name'] = item.name.text
          new_recipient['email'] = item.email
          new_recipient['group'] = 'signers'
          new_recipient['routingOrder'] = 2
          new_recipient['tabs'] = [
              {
                  'type': 'signHere',
                  'anchorString': generate_anchor('signHere', item.email)
              },
          ]
          recipients.append(new_recipient)

  document_name = custom_file_name + '.pdf'
---
