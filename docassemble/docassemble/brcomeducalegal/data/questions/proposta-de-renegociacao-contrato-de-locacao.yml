metadata:
  title: Proposta de Renegociação - Contrato de Locação
---
include:
  - element-tenant-school-interview.yml
  - element-features.yml
  - element-roadmap.yml
  - element-foro.yml
  - element-data-list.yml
  - element-signature.yml
  - element-generate-file.yml
  - element-educalegal-patch-document.yml
  - element-ged.yml
  - element-document-ready.yml
---
modules:
  - docassemble_wrappers.validator_collection_br
---
sections:
  - Locador
  - Imóvel
  - Cláusulas
  - Assinatura
  - Conclusão
---
code:  |
  content_document = "proposta-de-renegociacao-contrato-de-locacao.docx"
---
id: logic
mandatory: True
code: |
  if valid_data:
    menu_items
    if len(school_names_list) > 1:
      selected_school
    else:
      selected_school = school_names_list[0]
    school
    locador.name.first
    address_zip
    discount_value
    signature_local
    generated_file
    el_document_patched_with_docassemble_data
    if plan_use_ged:
      el_document_patched_with_ged_data
    document_ready_screen
  all_done
---
objects:
  - locador: Individual
---
ga id: |
  code: ga_id_begin
section: Locador
progress: 25
question: |
  Nome do Locador
fields:
  - "Nome completo:": locador.name.first
    required: True
  - "E-mail:": locador.email
    help: ${ help_email_msg }
    datatype: email
    required: False
script: |
  <script type="text/javascript">
    $(document).ready(function(){
        $('#bm90aWZpZWQuY3Bm').mask('000.000.000-00', {reverse: true});
    });
  </script>
---
section: Imóvel
progress: 35
question: |
  Endereço do Imóvel objeto do Contrato
fields:
  - "CEP:": address_zip
    required: True
  - "Logradouro:": address_street_name
    required: True
  - "Número:": address_street_number
    required: True
  - "Complemento:": address_complement
    required: False
  - "Bairro:": address_neighborhood
    required: True
  - "Cidade:": address_city
    required: True
  - "Estado:": address_state
    required: True
    code: state_initials_list
script: |
  <script type="text/javascript">
  $(document).ready(function(){
    $('#YWRkcmVzc196aXA').mask('00000-000');
  });

  $("#YWRkcmVzc196aXA").focusout(function(){
    var cep = $("#YWRkcmVzc196aXA").val();
    cep = cep.replace ("-","");
    if (cep != ""){
      var urlStr = "https://viacep.com.br/ws/"+ cep +"/json/";
      $.ajax({
        url: urlStr,
        crossDomain: true,
        type: "get",
        dataType: "json",
        success: function(data){
          $("#YWRkcmVzc19zdHJlZXRfbmFtZQ").val(data.logradouro);
          $("#YWRkcmVzc19uZWlnaGJvcmhvb2Q").val(data.bairro);
          $("#YWRkcmVzc19jaXR5").val(data.localidade);
          $("#YWRkcmVzc19zdGF0ZQ").val(data.uf);
        },
        error: function(erro){
          console.log(erro);
        }
      });
    }
  });
  </script>
---
code: |
  from num2words import num2words
  discount_valueE = num2words(discount_value, lang='pt_BR', to='currency')
---
section: Cláusulas
progress: 60
question: |
  Dados do contrato
subquestion: |
  A Escola está enviando uma proposta para reduzir o aluguel mensal para o valor de [FIELD discount_value].
fields:
  - Desconto no valor do aluguel: discount_value
    datatype: currency
    hint: 0000,00
  - "Data em que o contrato de locação foi firmado:": data_contrato
    datatype: date
script: |
  <script type="text/javascript">
  $(document).ready(function(){
    $('#ZGlzY291bnRfdmFsdWU').mask("###0.00", {reverse: true});
  });
  </script>
---
code: |
  recipients = list()
  notificante_recipient = dict()
  notificante_recipient['name'] = school_legal_name
  notificante_recipient['email'] = school_email
  notificante_recipient['group'] = 'signers'
  notificante_recipient['routingOrder'] = 1
  notificante_recipient['tabs'] = [
      {
          'type': 'signHere',
          'anchorString': generate_anchor('signHere', school_email)
      },
  ]
  recipients.append(notificante_recipient)

  locador_recipient = dict()
  locador_recipient['name'] = locador.name.first
  locador_recipient['email'] = locador.email
  locador_recipient['group'] = 'certifiedDeliveries'
  locador_recipient['routingOrder'] = 2
  recipients.append(locador_recipient)

  document_name = custom_file_name + '.pdf'

  documents = [
      {
          'name': document_name,
          'fileExtension': 'pdf',
          'documentBase64': make_document_base64(generated_file.pdf.path())
      }
  ]
---
code: |
  if plan_use_esignature:
    help_email_msg = "O e-mail informado será utilizado no envio do documento para assinatura eletrônica."
  else:
    help_email_msg = "Digite um e-mail válido."
---
code: |
  email_subject = "IMPORTANTE: " + school_name + " | " + interview_label
  email_category = interview_custom_file_name_string
  email_html_content = "<h1>" + interview_label + "</h1><p>Leia, com atenção o documento em anexo.</p>"
