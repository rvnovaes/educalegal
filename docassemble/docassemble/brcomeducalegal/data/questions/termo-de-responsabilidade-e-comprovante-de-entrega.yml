metadata:
  title: Termo de Responsabilidade e Comprovante de Entrega
---
include:
  - element-tenant-school-interview.yml
  - element-features.yml
  - element-roadmap.yml
  - element-data-list.yml
  - element-signature.yml
  - element-generate-file.yml
  - element-educalegal-patch-document.yml
  - element-document-ready.yml
  - element-school-representative.yml
  - element-default-messages.yml
---
modules:
  - docassemble_wrappers.validator_collection_br
  - .module_docusign_client
---
sections:
  - Empregado
  - Equipamento
  - Assinatura
  - Conclusão
---
code:  |
  content_document = "termo-de-responsabilidade-e-comprovante-de-entrega.docx"
---
id: logic
mandatory: True
code: |
  if valid_data:
    menu_items
    if len(school_names_list) > 1:
      selected_school
    else:
      selected_school = school_names_list[0]
    school
    representatives_list
    for item in representatives:
      item.name.text
    valid_representatives_table
    workers.target_number = 1
    for item in workers:
      item.name.text
    computer_brand
    signature_local
    generated_file
    el_patch_document
    document_ready_screen
---
objects:
  - workers: DAList.using(object_type=Individual, complete_attribute='complete', ask_number=True)
---
code: |
  workers[i].name.text
  workers[i].complete = True
comment: |
  1. A ordem informada nesse bloco é a ordem que aparece na entrevista
  2. O complete = True deve ser a última instrução sempre
---
section: Empregado
progress: 10
question: Número de Empregados
fields:
  - Número: workers.target_number
    datatype: integer
    default: 1
---
ga id: |
  code: ga_id_begin
section: Empregado
progress: 20
question: |
  Dados do(a) Empregado
fields:
  - "Nome completo:": workers[i].name.text
    validate: validate_person_full_name
    required: True
  - "CPF:": workers[i].cpf
    validate: validate_cpf
    required: True
  - "Número do RG:": workers[i].rg
    required: True
  - "Email:": workers[i].email
    required: True
    datatype: email
script: |
  <script type="text/javascript">
    $(document).ready(function(){
        $('#d29ya2Vyc1tpXS5jcGY').mask('000.000.000-00', {reverse: true});
    });
  </script>
---
section: Empregado
field: valid_workers_table
progress: 40
question: |
  Empregado:
subquestion: |
  Confira os e-mails dos destinatários abaixo, pois estes serão usados
  no envio para a assinatura eletrônica.
  ${ workers.table }
buttons:
  Continuar: continue
---
table: workers.table
rows: workers
columns:
  - Name: |
      row_item.name.text
  - E-mail: |
      row_item.email
edit:
  - email
---
section: Equipamento
progress: 70
question: |
  Dados do computador/notebook:
fields:
  - "Marca:": computer_brand
    required: True
  - "Modelo:": computer_model
    required: True
  - "Número de Série:": computer_serie
    required: True
  - "Data de entrega: ": computer_delivery_date
    datatype: date
---
code: |
  recipients = list()

  for item in workers:
      if item.email:
          new_recipient = dict()
          new_recipient['name'] = item.name.text
          new_recipient['email'] = item.email
          new_recipient['group'] = 'signers'
          new_recipient['routingOrder'] = 1
          new_recipient['tabs'] = [
              {
                  'type': 'signHere',
                  'anchorString': generate_anchor('signHere', item.email)
              },
          ]
          recipients.append(new_recipient)

  for item in representatives:
       if item.email:
           new_recipient = dict()
           new_recipient['name'] = item.name.text
           new_recipient['email'] = item.email
           new_recipient['group'] = 'signers'
           new_recipient['routingOrder'] = 2
           new_recipient['tabs'] = [
               {
                   'type': 'signHere',
                   'anchorString': generate_anchor('signHere', item.email)
               },
           ]
           recipients.append(new_recipient)

  document_name = custom_file_name + '.pdf'
