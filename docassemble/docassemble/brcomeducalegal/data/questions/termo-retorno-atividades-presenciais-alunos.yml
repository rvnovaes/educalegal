metadata:
  title: Termo de Retorno dos Alunos às Atividades Presenciais
---
include:
  - element-tenant-school-interview.yml
  - element-features.yml
  - element-roadmap.yml
  - element-data-list.yml
  - element-signature.yml
  - element-generate-file.yml
  - element-educalegal-patch-document.yml
  - element-document-ready.yml
  - element-school-representative.yml
  - element-default-messages.yml
---
modules:
  - docassemble_wrappers.validator_collection_br
  - .module_docusign_client
---
sections:
  - Aluno(a)
  - Responsável
  - Assinatura
  - Conclusão
---
code:  |
  content_document = "termo-retorno-atividades-presenciais-alunos.docx"
---
id: logic
mandatory: True
code: |
  if valid_data:
    menu_items
    if len(school_names_list) > 1:
      selected_school
    else:
      selected_school = school_names_list[0]
    school
    representatives_list
    for item in representatives:
      item.name.text
    valid_representatives_table
    students.target_number = 1
    for item in students:
      item.name.text
    guardians.target_number = 1
    for item in guardians:
      item.name.text
    if plan_use_esignature:
      valid_guardians_table
    signature_local
    generated_file
    el_patch_document
    document_ready_screen
---
objects:
  - students: DAList.using(object_type=Individual, complete_attribute='complete', ask_number=True)
---
code: |
  students[i].name.text
  students[i].complete = True
---
ga id: |
  code: ga_id_begin
section: Aluno(a)
progress: 5
question: Número de Alunos
fields:
  - Número: students.target_number
    datatype: integer
    default: 1
    min: 1
---
progress: 15
section: Aluno(a)
question: Dados escolares do Aluno
fields:
  - 'Nome completo: ': students[i].name.text
    datatype: text
  - 'Série: ': students[i].grade
    datatype: dropdown
    choices:
    - Berçário: Berçário
    - Maternal I: Maternal I
    - Maternal II: Maternal II
    - Maternal III: Maternal III
    - 1º período do ensino infantil: 1º período do ensino infantil
    - 2º período do ensino infantil: 2º período do ensino infantil
    - 1º ano do ensino fundamental: 1º ano do ensino fundamental
    - 2º ano do ensino fundamental: 2º ano do ensino fundamental
    - 3º ano do ensino fundamental: 3º ano do ensino fundamental
    - 4º ano do ensino fundamental: 4º ano do ensino fundamental
    - 5º ano do ensino fundamental: 5º ano do ensino fundamental
    - 6º ano do ensino fundamental: 6º ano do ensino fundamental
    - 7º ano do ensino fundamental: 7º ano do ensino fundamental
    - 8º ano do ensino fundamental: 8º ano do ensino fundamental
    - 9º ano do ensino fundamental: 9º ano do ensino fundamental
    - 1º ano do ensino médio: 1º ano do ensino médio
    - 2º ano do ensino médio: 2º ano do ensino médio
    - 3º ano do ensino médio: 3º ano do ensino médio
  - 'Período: ': students[i].period
    choices:
    - matutino: matutino
    - vespertino: vespertino
    - noturno: noturno
    - integral: integral
    datatype: dropdown
---
objects:
  - guardians: DAList.using(object_type=Individual, complete_attribute='complete', ask_number=True)
---
code: |
  guardians[i].name.text
  guardians[i].address.street_name
  guardians[i].complete = True
---
ga id: |
  code: ga_id_begin
section: Responsável
progress: 40
question: |
  Dados do(a) Responsável
fields:
  - "Nome completo:": guardians[i].name.text
    validate: validate_person_full_name
    required: True
  - "CPF:": guardians[i].cpf
    validate: validate_cpf
    required: True
  - "Número do RG:": guardians[i].rg
    required: True
  - "E-mail:": guardians[i].email
    help: ${ help_email_msg }
    required: False
    datatype: email
script: |
  <script type="text/javascript">
    $(document).ready(function(){
        $('#Z3VhcmRpYW5zW2ldLmNwZg').mask('000.000.000-00', {reverse: true});
    });
  </script>
---
section: Responsável
progress: 60
question: |
  Endereço do(a) ${ guardians[i].name.text }
fields:
  - "CEP:": guardians[i].address.zip
    required: True
  - "Logradouro:": guardians[i].address.street_name
    required: True
  - "Número:": guardians[i].address.street_number
    required: True
  - "Complemento:": guardians[i].address.unit
    required: False
  - "Bairro:": guardians[i].address.neighborhood
    required: True
  - "Cidade:": guardians[i].address.city
    required: True
  - "Estado:": guardians[i].address.state
    required: True
    code: state_initials_list
script: |
  <script type="text/javascript">
  $(document).ready(function(){
    $('#Z3VhcmRpYW5zW2ldLmFkZHJlc3Muemlw').mask('00000-000');
  });

  $("#Z3VhcmRpYW5zW2ldLmFkZHJlc3Muemlw").focusout(function(){
    var cep = $("#Z3VhcmRpYW5zW2ldLmFkZHJlc3Muemlw").val();
    cep = cep.replace ("-","");
    if (cep != ""){
      var urlStr = "https://viacep.com.br/ws/"+ cep +"/json/";
      $.ajax({
        url: urlStr,
        crossDomain: true,
        type: "get",
        dataType: "json",
        success: function(data){
          $("#Z3VhcmRpYW5zW2ldLmFkZHJlc3Muc3RyZWV0X25hbWU").val(data.logradouro);
          $("#Z3VhcmRpYW5zW2ldLmFkZHJlc3MubmVpZ2hib3Job29k").val(data.bairro);
          $("#Z3VhcmRpYW5zW2ldLmFkZHJlc3MuY2l0eQ").val(data.localidade);
          $("#Z3VhcmRpYW5zW2ldLmFkZHJlc3Muc3RhdGU").val(data.uf);
        },
        error: function(erro){
          console.log(erro);
        }
      });
    }
  });
  </script>
---
section: Responsável
field: valid_guardians_table
progress: 80
question: |
  Responsável(is):
subquestion: |
  Confira os e-mails dos destinatários abaixo, pois estes serão usados
  no envio para a assinatura eletrônica.
  ${ guardians.table }
buttons:
  Continuar: continue
---
table: guardians.table
rows: guardians
columns:
  - Name: |
      row_item.name.text
  - E-mail: |
      row_item.email
edit:
  - email
---
code: |
  recipients = list()

  for item in guardians:
      if item.email:
          new_recipient = dict()
          new_recipient['name'] = item.name.text
          new_recipient['email'] = item.email
          new_recipient['group'] = 'signers'
          new_recipient['routingOrder'] = 1
          new_recipient['tabs'] = [
              {
                  'type': 'signHere',
                  'anchorString': generate_anchor('signHere', item.email)
              },
          ]
          recipients.append(new_recipient)

  for item in representatives:
      if item.email:
          new_recipient = dict()
          new_recipient['name'] = item.name.text
          new_recipient['email'] = item.email
          new_recipient['group'] = 'signers'
          new_recipient['routingOrder'] = 2
          new_recipient['tabs'] = [
              {
                  'type': 'signHere',
                  'anchorString': generate_anchor('signHere', item.email)
              },
          ]
          recipients.append(new_recipient)

  document_name = custom_file_name + '.pdf'
