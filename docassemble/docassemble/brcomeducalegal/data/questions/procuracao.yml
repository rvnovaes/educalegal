metadata:
  title: Procuração
---
include:
  - element-tenant-school-interview.yml
  - element-features.yml
  - element-roadmap.yml
  - element-data-list.yml
  - element-signature.yml
  - element-generate-file.yml
  - element-educalegal-patch-document.yml
  - element-document-ready.yml
  - element-school-email-reviewed.yml
  - element-default-messages.yml
  - element-school-witness.yml
  - element-payment-method.yml
---
modules:
  - docassemble_wrappers.validator_collection_br
  - .module_docusign_client
---
sections:
  - Outorgantes
  - Outorgados
  - Dados da Procuração
  - Assinatura
  - Conclusão
---
code:  |
  content_document = "contrato-prestacao-servicos-educacionais.docx"
---
id: logic
mandatory: True
code: |
  if valid_data:
    menu_items
    if len(school_names_list) > 1:
      selected_school
    else:
      selected_school = school_names_list[0]
    school
    for item in grantors:
      item.name.text
    for item in grantors:
      item.name.text
    final_date
    signature_local
    generated_file
    el_patch_document
    document_ready_screen
---
objects:
  - grantors: |
      DAList.using(
        object_type=Person,
        ask_number=True,
        complete_attribute='complete')
  - grantors[i].child: |
      DAList.using(
        object_type=Individual,
        ask_number=True)
---
code: |
  grantors[i].type
  grantors[i].name.text
  if grantors[i].type == 'organization':
    grantors[i].child.gather()
  grantors[i].complete = True
---
section: Outorgantes
question: |
  Número de outorgantes
fields:
  - Número: grantors.target_number
    datatype: integer
    default: 1
    min: 1
---
section: Outorgantes
question: |
  Tipo do ${ word(ordinal(i)) } outorgante
fields:
  - "Tipo:": grantors[i].type
    required: True
    datatype: radio
    choices:
      - Pessoa Física: individual
      - Pessoa Jurídica: organization
---
question: |
  Dados do(a) ${ word(ordinal(i)) } outorgante
fields:
  - "Nome/Razão Social": grantors[i].name.text
  - "Número de representantes:": grantors[i].child.target_number
    required: False
    datatype: integer
    default: 1
    min: 1
    show if:
      code: |
        grantors[i].type == "organization"
  - "CPF:": grantors[i].cpf
    required: True
    validate: validate_cpf
    show if:
      variable: grantors[i].person_type
      is: individual
  - "Número do RG:": grantors[i].rg
    required: True
    show if:
      variable: grantors[i].person_type
      is: individual
  - "Nacionalidade:": grantors[i].nationality
    required: True
    default: brasileiro(a)
    show if: 
      variable: grantors[i].person_type
      is: individual
  - "Estado Civil:": grantors[i].marital_status
    required: True
    choices:
      - solteiro(a): solteiro(a)
      - casado(a): casado(a)
      - divorciado(a): divorciado(a)
      - viúvo(a): viúvo(a)
    datatype: radio
    show if: 
      variable: grantors[i].person_type
      is: individual
  - "Profissão:": grantors[i].occupation
    required: True
    show if: 
      variable: grantors[i].person_type
      is: individual
  - "CNPJ:": grantors[i].cnpj
    required: True
    validate: validate_cnpj
    show if:
      variable: grantors[i].person_type
      is: organization
  - "E-mail:": grantors[i].email
    help: ${ help_email_msg }
    required: false
    datatype: email
    js show if: |
      val("grantors[i].person_type") == "organization" || val("grantors[i].person_type") == "individual"
script: |
  <script type="text/javascript">
    $(document).ready(function(){
        $('#X2ZpZWxkXzI').mask('000.000.000-00', {reverse: true});
        $('#X2ZpZWxkXzc').mask('00.000.000/0000-00', {reverse: true});
      });
  </script>
---
section: Outra Parte
progress: 15
question: |
  Endereço do(a) ${ grantors[i] }
fields:
  - "CEP:": grantors[i].address.zip
    required: True
  - "Logradouro:": grantors[i].address.street_name
    required: True
  - "Número:": grantors[i].address.street_number
    required: True
  - "Complemento:": grantors[i].address.unit
    required: False
  - "Bairro:": grantors[i].address.neighborhood
    required: True
  - "Cidade:": grantors[i].address.city
    required: True
  - "Estado:": grantors[i].address.state
    required: True
    code: state_initials_list
script: |
  <script type="text/javascript">
  $(document).ready(function(){
    $('#bG9jYWRvcmVzW2ldLmFkZHJlc3Muemlw').mask('00000-000');
  });

  $("#bG9jYWRvcmVzW2ldLmFkZHJlc3Muemlw").focusout(function(){
    var cep = $("#bG9jYWRvcmVzW2ldLmFkZHJlc3Muemlw").val();
    cep = cep.replace ("-","");
    if (cep != ""){
      var urlStr = "https://viacep.com.br/ws/"+ cep +"/json/";
      $.ajax({
        url: urlStr,
        crossDomain: true,
        type: "get",
        dataType: "json",
        success: function(data){
          $("#bG9jYWRvcmVzW2ldLmFkZHJlc3Muc3RyZWV0X25hbWU").val(data.logradouro);
          $("#bG9jYWRvcmVzW2ldLmFkZHJlc3MubmVpZ2hib3Job29k").val(data.bairro);
          $("#bG9jYWRvcmVzW2ldLmFkZHJlc3MuY2l0eQ").val(data.localidade);
          $("#bG9jYWRvcmVzW2ldLmFkZHJlc3Muc3RhdGU").val(data.uf);
        },
        error: function(erro){
          console.log(erro);
        }
      });
    }
  });
  </script>
---
section: Acionistas
question: |
  Dados do ${ word(ordinal(j)) } representante do(a) ${ grantors[i] }:
fields:
  - "Nome completo:": grantors[i].child[j].name.first
    required: False
---
objects:
  - granted: |
      DAList.using(
        object_type=Person,
        ask_number=True,
        complete_attribute='complete')
---
ga id: |
  code: ga_id_begin
section: Outorgado
progress: 15
question: |
  Número de Outorgado
fields:
  - "Número:": granted.target_number
    datatype: integer
    default: 1
    min: 1
---
code: |
  granted[i].name.text
  granted[i].address.street_name
  granted[i].complete = True
---
section: Outorgado
progress: 15
question: |
  Dados do(a) ${ word(ordinal(i)) } outorgado
fields:
  - 'Nome Completo:': granted[i].name.text
    validate: validate_person_full_name
  - "CPF:": granted[i].cpf
    required: True
    validate: validate_cpf
  - "Número do RG:": granted[i].rg
    required: True
  - "Nacionalidade:": granted[i].nationality
    required: True
    default: brasileiro(a)
  - "Estado Civil:": granted[i].marital_status
    required: True
    choices:
      - solteiro(a): solteiro(a)
      - casado(a): casado(a)
      - divorciado(a): divorciado(a)
      - viúvo(a): viúvo(a)
    datatype: radio
  - "E-mail:": granted[i].email
    help: ${ help_email_msg }
    required: false
    datatype: email
script: |
  <script type="text/javascript">
    $(document).ready(function(){
        $('#X2ZpZWxkXzI').mask('000.000.000-00', {reverse: true});
      });
  </script>
---
section: Outorgado
progress: 15
question: |
  Endereço do(a) ${ granted[i] }
fields:
  - "CEP:": granted[i].address.zip
    required: True
  - "Logradouro:": granted[i].address.street_name
    required: True
  - "Número:": granted[i].address.street_number
    required: True
  - "Complemento:": granted[i].address.unit
    required: False
  - "Bairro:": granted[i].address.neighborhood
    required: True
  - "Cidade:": granted[i].address.city
    required: True
  - "Estado:": granted[i].address.state
    required: True
    code: state_initials_list
script: |
  <script type="text/javascript">
  $(document).ready(function(){
    $('#bG9jYWRvcmVzW2ldLmFkZHJlc3Muemlw').mask('00000-000');
  });

  $("#bG9jYWRvcmVzW2ldLmFkZHJlc3Muemlw").focusout(function(){
    var cep = $("#bG9jYWRvcmVzW2ldLmFkZHJlc3Muemlw").val();
    cep = cep.replace ("-","");
    if (cep != ""){
      var urlStr = "https://viacep.com.br/ws/"+ cep +"/json/";
      $.ajax({
        url: urlStr,
        crossDomain: true,
        type: "get",
        dataType: "json",
        success: function(data){
          $("#bG9jYWRvcmVzW2ldLmFkZHJlc3Muc3RyZWV0X25hbWU").val(data.logradouro);
          $("#bG9jYWRvcmVzW2ldLmFkZHJlc3MubmVpZ2hib3Job29k").val(data.bairro);
          $("#bG9jYWRvcmVzW2ldLmFkZHJlc3MuY2l0eQ").val(data.localidade);
          $("#bG9jYWRvcmVzW2ldLmFkZHJlc3Muc3RhdGU").val(data.uf);
        },
        error: function(erro){
          console.log(erro);
        }
      });
    }
  });
  </script>
---
section: Outorgado
field: valid_granted_table
question: |
  Outorgado:
subquestion: |
  Confira os e-mails dos destinatários abaixo, pois estes serão usados
  no envio para a assinatura eletrônica.
  ${ granted.table }
buttons:
  Continuar: continue
---
table: granted.table
rows: granted
columns:
  - Name: |
      row_item.name.text
  - E-mail: |
      row_item.email
edit:
  - email
---
section: Outorgado
progress: 15
question: Data final
fields:
  - Data: final_date
    datatype: date
    required: True
---
