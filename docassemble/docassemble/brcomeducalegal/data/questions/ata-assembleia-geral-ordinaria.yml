metadata:
  title: Ata da Assembleia Geral Ordinária
---
include:
  - element-tenant-school-interview.yml
  - element-features.yml
  - element-roadmap.yml
  - element-data-list.yml
  - element-signature.yml
  - element-generate-file.yml
  - element-educalegal-patch-document.yml
  - element-ged.yml
  - element-default-messages.yml
---
modules:
  - docassemble_wrappers.validator_collection_br
---
sections:
  - Companhia
  - Assembleia
  - Exercício Social
  - Agenda
  - Acionistas Presentes
---
code:  |
  content_document = "ata-assembleia-geral-ordinaria.docx"
---
id: logic
mandatory: True
code: |
  if valid_data:
    menu_items
    if len(school_names_list) > 1:
      selected_school
    else:
      selected_school = school_names_list[0]
    stock_company.target_number = 1
    for item in stock_company:
      item.name.text
    for item in directors:
      item.name.first
    general_shareholder_meeting_date
    chairman_name
    accounting_year
    for item in agenda:
      item.name.text
    for item in adoptions:
      item.name.text
    for item in shareholders:
      if item.type  == 'individual':
        item.name.text
        item.child.target_number = 0
      elif item.type == 'organization':
        item.name.text
    signature_local
    generated_file
    el_document_patched_with_docassemble_data
    if plan_use_ged:
      el_document_patched_with_ged_data
    document_ready_screen
  all_done
---
objects:
  - example_ata_assembleia_geral_ordinaria: DAStaticFile.using(filename='example-ata-assembleia-geral-ordinaria.pdf')
  - stock_company: DAList.using(object_type=Organization, complete_attribute='complete', ask_number=True)
---
code: |
  stock_company[i].name.text
  stock_company[i].address.street_name
  stock_company[i].complete = True
comment: |
  1. A ordem informada nesse bloco é a ordem que aparece na entrevista
  2. O complete = True deve ser a última instrução sempre
---
section: Companhia
progress: 5
question: Número de Companhias
fields:
  - Número: stock_company.target_number
    datatype: integer
    default: 1
    min: 1
---
ga id: |
  code: ga_id_begin
progress: 5
section: Companhia
question: Dados da Companhia
fields:
  - 'Razão Social: ': stock_company[i].name.text
    datatype: text
  - 'CNPJ:': stock_company[i].cnpj
    datatype: text
    required: True
    validate: validate_cnpj
  - 'Nire: ': stock_company[i].nire
    datatype: text
    required: True
    help: "A sigla NIRE significa Número de Identificação do Registro de Empresas. É ele quem comprova que a empresa existe oficialmente."
script: |
  <script type="text/javascript">
    $(document).ready(function(){
        $('#c3RvY2tfY29tcGFueVtpXS5jbnBq').mask('00.000.000/0000-00', {reverse: true});
      });
  </script>
right: |
  <center><h5><strong>Saiba mais</strong></h5>
  <p>A assembleia geral ordinária (AGO) é uma assembleia realizada no máximo em até 4 meses após o encerramento do exercício, com a finalidade de tomar as contas dos administradores, examinar, discutir e votar as demonstrações financeiras, deliberar sobre a destinação do lucro líquido do exercício e a distribuição de dividendos, e eleger os administradores e, se for o caso, os membros do conselho fiscal.</p>
  <center>[Clique para visualizar a minuta](${ example_ata_assembleia_geral_ordinaria.url_for() })</center>
---
progress: 5
section: Companhia
question: Endereço da ${ stock_company[i].name.text }
fields:
  - 'CEP: ': stock_company[i].address.zip
    datatype: text
  - 'Logradouro: ': stock_company[i].address.street_name
    datatype: text
    address autocomplete: True
  - 'Número: ': stock_company[i].address.street_number
    datatype: text
  - 'Complemento: ': stock_company[i].address.unit
    datatype: text
    required: False
  - 'Bairro: ': stock_company[i].address.neighborhood
    datatype: text
  - 'Município: ': stock_company[i].address.city
    datatype: text
  - 'Estado: ': stock_company[i].address.state
    code: state_initials_list
script: |
  <script type="text/javascript">
  $(document).ready(function(){
    $('#c3RvY2tfY29tcGFueVtpXS5hZGRyZXNzLnppcA').mask('00000-000');
  });

  $("#c3RvY2tfY29tcGFueVtpXS5hZGRyZXNzLnppcA").focusout(function(){
    var cep = $("#c3RvY2tfY29tcGFueVtpXS5hZGRyZXNzLnppcA").val();
    cep = cep.replace ("-","");
    if (cep != ""){
      var urlStr = "https://viacep.com.br/ws/"+ cep +"/json/";
      $.ajax({
        url: urlStr,
        crossDomain: true,
        type: "get",
        dataType: "json",
        success: function(data){
          $("#c3RvY2tfY29tcGFueVtpXS5hZGRyZXNzLnN0cmVldF9uYW1l").val(data.logradouro);
          $("#c3RvY2tfY29tcGFueVtpXS5hZGRyZXNzLm5laWdoYm9yaG9vZA").val(data.bairro);
          $("#c3RvY2tfY29tcGFueVtpXS5hZGRyZXNzLmNpdHk").val(data.localidade);
          $("#c3RvY2tfY29tcGFueVtpXS5hZGRyZXNzLnN0YXRl").val(data.uf);
        },
        error: function(erro){
          console.log(erro);
        }
      });
    }
  });
  </script>
---
objects:
  - directors: DAList.using(object_type=Individual, there_are_any=True)
---
progress: 20
section: Companhia
question: |
  Integrantes da administração da companhia presentes na assembleia
fields:
  - "Nome completo:": directors[i].name.first
    required: True
list collect: True
---
section: Assembleia
progress: 15
question: Data e Horário da Assembleia
fields:
  - Data: general_shareholder_meeting_date
    datatype: date
    required: True
  - "Horário:": general_shareholder_meeting_hours
    datatype: time
    required: True
---
section: Assembleia
progress: 15
question: Integrantes da mesa da Assembleia
fields:
  - "Nome completo do presidente: ": chairman_name
    validate: validate_person_full_name
    required: True
  - "E-mail do presidente: ": chairman_email
    help: ${ help_email_msg }
    datatype: email
  - "Nome completo do secretário: ": secretary_name
    validate: validate_person_full_name
    required: True
  - "E-mail do secretário: ": secretary_email
    help: ${ help_email_msg }
    datatype: email
---
section: Assembleia
progress: 15
question: Exercício Social
subquestion: |
  As demonstrações financeiras apresentadas pela Companhia são relativas ao exercício social encerrado em [FIELD accounting_year].
fields:
  - Ano: accounting_year
    datatype: integer
    inline width: 10em
    required: True
---
objects:
  - agenda: DAList.using(object_type=Thing, there_are_any=True)
---
progress: 25
section: Agenda
question: Ordem do dia
subquestion: |
  Esta assembleia terá como agenda:
fields:
  - "Ordem:": agenda[i].name.text
    input type: area
    rows: 10
    required: True
list collect: True
---
objects:
  - adoptions: DAList.using(object_type=Thing, there_are_any=True)
---
progress: 30
section: Deliberações
question: Deliberações
subquestion: |
  Os acionistas decidiram, por unanimidade, sem quaisquer reservas ou ressalvas:
fields:
  - "Ordem:": adoptions[i].name.text
    required: True
    default: "APROVAR, "
    input type: area
    rows: 10
list collect: True
---
objects:
  - shareholders: |
      DAList.using(
        object_type=Person,
        ask_number=True,
        complete_attribute='complete')
  - shareholders[i].child: |
      DAList.using(
        object_type=Individual,
        ask_number=True)
---
code: |
  shareholders[i].type
  shareholders[i].name.text
  if shareholders[i].type == 'organization':
    shareholders[i].child.gather()
  shareholders[i].complete = True
---
section: Acionistas
question: |
  Número de acionistas presentes na assembleia
fields:
  - Número: shareholders.target_number
    datatype: integer
    min: 1
---
section: Acionistas
question: |
  Tipo do ${ word(ordinal(i)) } acionista
fields:
  - "Tipo:": shareholders[i].type
    required: True
    datatype: radio
    choices:
      - Pessoa Física: individual
      - Pessoa Jurídica: organization
---
question: |
  Dados do(a) ${ word(ordinal(i)) } acionista
fields:
  - Nome Completo: shareholders[i].name.text
    show if:
      code: |
        shareholders[i].type == "individual"
  - Razão Social: shareholders[i].name.text
    show if:
      code: |
        shareholders[i].type == "organization"
  - "Número de representantes:": shareholders[i].child.target_number
    required: False
    datatype: integer
    default: 1
    min: 1
    show if:
      code: |
        shareholders[i].type == "organization"
---
section: Acionistas
question: |
  Dados do ${ word(ordinal(j)) } representante do(a) ${ shareholders[i] }:
fields:
  - "Nome completo:": shareholders[i].child[j].name.first
    required: False
---
code: |
  recipients = list()

  if chairman_email:
      new_recipient = dict()
      new_recipient['name'] = chairman_name
      new_recipient['email'] = chairman_email
      new_recipient['group'] = 'signers'
      new_recipient['routingOrder'] = 1
      new_recipient['tabs'] = [
          {
              'type': 'signHere',
              'anchorString': generate_anchor('signHere', chairman_email)
          },
      ]
      recipients.append(new_recipient)

  if secretary_email:
      new_recipient = dict()
      new_recipient['name'] = secretary_name
      new_recipient['email'] = secretary_email
      new_recipient['group'] = 'signers'
      new_recipient['routingOrder'] = 1
      new_recipient['tabs'] = [
          {
              'type': 'signHere',
              'anchorString': generate_anchor('signHere', secretary_email)
          },
      ]
      recipients.append(new_recipient)

  document_name = custom_file_name + '.pdf'

  documents = [
      {
          'name': document_name,
          'fileExtension': 'pdf',
          'documentBase64': make_document_base64(generated_file.pdf.path())
      }
  ]
---
include:
  - element-esignature.yml
  - element-send-email.yml
---
undefine:
  - button_send_list
ga id: |
  code: ga_id_end
event: document_ready_screen
section: Conclusão
progress: 100
back button: False
question: |
  Seu documento foi gerado com sucesso!
subquestion: |
  ${ generated_file.pdf.filename }
under: |
  Você pode baixar os documentos:
  [PDF](${ generated_file.pdf.url_for() })
  ou
  [DOCX](${ generated_file.docx.url_for() })


  % if plan_use_ged:
    % if ged_response_status_code == 201:
      O documento foi inserido com sucesso no GED - id: ${ ged_id }
    % else:
      <p>Houve erro ao inserir o documento no GED</p>
      ${ ged_response }
    % endif
  % endif


action buttons:
  code: |
    button_list
---
code: |
  esignature_button = {'action': 'submit_to_esignature',
                       'arguments': {'target': 'signature'},
                       'label': 'Enviar para assinatura eletrônica',
                       'color': 'info',
                       'icon': 'signature'}
---
code: |
  email_button = {'action': 'el_send_email',
                       'arguments': {'target': 'email'},
                       'label': 'Enviar por e-mail',
                       'color': 'info',
                       'icon': 'envelope'}
---
code: |
  el_button = {'action': educalegal_url,
                'label': 'Fim',
                'color': 'success',
                'icon': 'check'}
---
code: |
  button_list = list()
  button_list.append(el_button)
  button_list.append(email_button)
  if plan_use_esignature:
    button_list.append(esignature_button)
---
event: all_done
back button: False
question: Você já completou todas as etapas desta entrevista
action buttons:
  code: |
    [el_button]
---