metadata:
  title: Proposta de Renegociação - Fluxo de Pagamento
---
include:
  - element-tenant-school-interview.yml
  - element-features.yml
  - element-roadmap.yml
  - element-foro.yml
  - element-data-list.yml
  - element-signature.yml
  - element-generate-file.yml
  - element-educalegal-patch-document.yml
  - element-ged.yml
  - element-document-ready.yml
  - element-school-email-reviewed.yml
---
modules:
  - docassemble_wrappers.validator_collection_br
---
sections:
  - Fornecedor
  - Fluxo de Pagamento
  - Assinatura
  - Conclusão
---
code:  |
  content_document = "proposta-de-renegociacao-fluxo-de-pagamento.docx"
---
id: logic
mandatory: True
code: |
  if valid_data:
    menu_items
    if len(school_names_list) > 1:
      selected_school
    else:
      selected_school = school_names_list[0]
    school
    fornecedores.target_number = 1
    for item in fornecedores:
      item.name.text
    parcelas
    signature_local
    generated_file
    el_document_patched_with_docassemble_data
    if plan_use_ged:
      el_document_patched_with_ged_data
    document_ready_screen
  all_done
---
objects:
  - fornecedores: DAList.using(object_type=Individual, complete_attribute='complete', ask_number=True)
---
code: |
  fornecedores[i].name.text
  fornecedores[i].complete = True
comment: |
  1. A ordem informada nesse bloco é a ordem que aparece na entrevista
  2. O complete = True deve ser a última instrução sempre
---
section: Fornecedor
progress: 25
question: Número de Fornecedores
fields:
  - Número: fornecedores.target_number
    datatype: integer
    default: 1
---
ga id: |
  code: ga_id_begin
section: Fornecedor
progress: 50
question: |
  Nome do Fornecedor
fields:
  - "Nome completo:": fornecedores[i].name.text
    required: True
  - "E-mail:": fornecedores[i].email
    help: ${ help_email_msg }
    datatype: email
    required: False
script: |
  <script type="text/javascript">
    $(document).ready(function(){
        $('#bm90aWZpZWQuY3Bm').mask('000.000.000-00', {reverse: true});
    });
  </script>
---
section: Fluxo de Pagamento
progress: 60
question: |
  Fluxo de Pagamento
subquestion: |
  A Escola está enviando uma proposta de renegociação para que o saldo em aberto seja reparcelado em [FIELD parcelas] vezes e com a primeira parcela a partir de [FIELD data_parcela]
fields:
  - Número de Parcelas: parcelas
    datatype: integer
    inline width: 10em
  - Data: data_parcela
    datatype: date
---
code: |
  recipients = list()
  for item in fornecedores:
       if item.email:
            new_recipient = dict()
            new_recipient['name'] = item.name.text
            new_recipient['email'] = item.email
            new_recipient['group'] = 'certifiedDeliveries'
            new_recipient['routingOrder'] = 1
            recipients.append(new_recipient)

  new_recipient = dict()
  new_recipient['name'] = school_legal_name
  new_recipient['email'] = school_email
  new_recipient['group'] = 'signers'
  new_recipient['routingOrder'] = 2
  new_recipient['tabs'] = [
      {
          'type': 'signHere',
          'anchorString': generate_anchor('signHere', school_email)
      },
  ]
  recipients.append(new_recipient)

  document_name = custom_file_name + '.pdf'

  documents = [
      {
          'name': document_name,
          'fileExtension': 'pdf',
          'documentBase64': make_document_base64(generated_file.pdf.path())
      }
  ]
---
code: |
  if plan_use_esignature:
    help_email_msg = "O e-mail informado será utilizado no envio do documento para assinatura eletrônica."
  else:
    help_email_msg = "Digite um e-mail válido."
---
code: |
  email_subject = "IMPORTANTE: " + school_name + " | " + interview_label
  email_category = interview_custom_file_name_string
  email_html_content = "<h1>" + interview_label + "</h1><p>Leia, com atenção o documento em anexo.</p>"
